// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(uuid())
  email        String @unique
  username     String @unique
  passwordHash String
  refreshToken String
  roles        Role   @default(BASIC)
  // challengeSubmissions ChallengeSubmission[]
  // questionSubmissions QuestionSubmission[]
}

// model ChallengeSubmission {
//   id String @id @default(uuid())
//   player User @relation(fields:[playerId], references: [id])
//   playerId String
// }

// model QuestionSubmission {
//   id String @id @default(uuid())
//   player User @relation(fields: [playerId], references: [id])
//   playerId String
// }

enum Role {
  BASIC
  ADMIN
}

// model User {
//   id               String          @id @default(uuid())
//   name             String
//   age              Int
//   email            String          @unique
//   role             Role            @default(BASIC)
//   writtenPosts     Post[]          @relation("WrittenPosts")
//   favouritePosts   Post[]          @relation("FavouritePosts")
//   userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
//   userPreferenceId String?         @unique
// }

// model UserPreference {
//   id           String  @id @default(uuid())
//   emailUpdates Boolean
//   user         User?
// }

// model Post {
//   id             String     @id @default(uuid())
//   title          String
//   averageRating  Float
//   createdAt      DateTime   @default(now())
//   updatedAt      DateTime   @updatedAt
//   author         User       @relation("WrittenPosts", fields: [authorId], references: [id])
//   authorId       String
//   favouritedBy   User?      @relation("FavouritePosts", fields: [favouritedById], references: [id])
//   favouritedById String?
//   categories     Category[]
// }

// model Category {
//   id    String @id @default(uuid())
//   name  String @unique
//   posts Post[]
// }

// enum Role {
//   BASIC
//   EDITOR
//   ADMIN
// }
